var __decorate = this && this.__decorate || function(e, t, n, o) {
    var i, r = arguments.length, c = r < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, n) : o;
    if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(e, t, n, o); else for (var a = e.length - 1; a >= 0; a--) (i = e[a]) && (c = (r < 3 ? i(c) : r > 3 ? i(t, n, c) : i(t, n)) || c);
    return r > 3 && c && Object.defineProperty(t, n, c), c;
}, __metadata = this && this.__metadata || function(e, t) {
    if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
};

System.register("angularjs-compiler", [ "angular" ], function(e, t) {
    "use strict";
    var n, o;
    t && t.id;
    return {
        setters: [ function(e) {
            n = e;
        } ],
        execute: function() {
            o = function() {
                function e(e) {
                    void 0 === e && (e = []);
                    var t = this;
                    this.destroy = function() {
                        t._scope.$destroy(), t._scope = void 0, t._compile = void 0, t._injector = void 0;
                    }, this.compile = function(e, n, o) {
                        var i, r, c = t._scope.$new();
                        if (n) {
                            c.$ctrl = n;
                            for (var a in c.$ctrl) !function(e) {
                                var t = n.$ctrl[e + "Changed"];
                                n.$ctrl[e + "Changed"] = function(n, o) {
                                    r || (c[e] = n, c.$digest()), t && t(n, o);
                                };
                            }(a);
                        }
                        return i = t._compile(e)(c), c.$digest(), new MutationObserver(function(e, t) {
                            var o = i.data(), c = o.$isolateScope || o.$scope, a = function(e, t, o) {
                                r = !0, n[e] = t, r = !1;
                            };
                            for (var s in c.$ctrl) !function(e) {
                                c.$watch("$ctrl." + e, function(t, n) {
                                    if (t && n && t !== n) return a(e, t);
                                });
                            }(s);
                            c.$digest(), t.disconnect();
                        }).observe(i[0], {
                            childList: !0,
                            subtree: !0
                        }), i;
                    }, this.invoke = function(e, n, o) {
                        t._injector.invoke(e, n, o);
                    }, e instanceof Node ? this._injector = n.element(e).injector() : (e = [].concat(e), 
                    n.module("ngMonkey", [ "ng" ]).provider({
                        $rootElement: function() {
                            this.$get = function() {
                                return n.element(document);
                            };
                        }
                    }), e.splice(0, 0, "ngMonkey"), this._injector = n.injector(e)), this.invoke(function(e, n) {
                        "ngInject";
                        t._scope = n.$new(), t._compile = e;
                    });
                }
                return e;
            }(), o.create = function(e) {
                return void 0 === e && (e = []), new o(e);
            }, e("AngularJSCompiler", o);
        }
    };
}), System.register("angularjs-adapter", [ "aurelia-framework", "angularjs-compiler" ], function(e, t) {
    "use strict";
    var n, o, i;
    t && t.id;
    return {
        setters: [ function(e) {
            n = e;
        }, function(e) {
            o = e;
        } ],
        execute: function() {
            i = function() {
                function e(e) {
                    this.element = e, this.controller = {}, this.modules = [];
                }
                return e.prototype.attached = function() {
                    if (1 !== this.element.children.length) throw "The content of <angularjs> must be a single HTMLElement";
                    o.AngularJSCompiler.create([].concat(this.modules)).compile(this.element.children[0], this.controller);
                }, e;
            }(), __decorate([ n.bindable, __metadata("design:type", Object) ], i.prototype, "controller", void 0), 
            __decorate([ n.bindable, __metadata("design:type", Object) ], i.prototype, "modules", void 0), 
            i = __decorate([ n.noView(), n.processContent(!1), n.inject(Element), __metadata("design:paramtypes", [ Element ]) ], i), 
            e("Angularjs", i);
        }
    };
});